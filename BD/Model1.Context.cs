//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MenuRestaurantEntities : DbContext
    {
        public MenuRestaurantEntities()
            : base("name=MenuRestaurantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Blud_and_nap> Blud_and_nap { get; set; }
        public virtual DbSet<Categ> Categ { get; set; }
        public virtual DbSet<Ed_izm> Ed_izm { get; set; }
        public virtual DbSet<Ingred> Ingred { get; set; }
        public virtual DbSet<Jurn_ychet_ingred> Jurn_ychet_ingred { get; set; }
        public virtual DbSet<Rezepts> Rezepts { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Sost_rez> Sost_rez { get; set; }
        public virtual DbSet<Sost_zakaz> Sost_zakaz { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Type_ychet> Type_ychet { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Zakaz> Zakaz { get; set; }
        public virtual DbSet<Rashod> Rashod { get; set; }
    
        [DbFunction("MenuRestaurantEntities", "asdf")]
        public virtual IQueryable<asdf_Result> asdf(Nullable<int> chislo)
        {
            var chisloParameter = chislo.HasValue ?
                new ObjectParameter("chislo", chislo) :
                new ObjectParameter("chislo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<asdf_Result>("[MenuRestaurantEntities].[asdf](@chislo)", chisloParameter);
        }
    
        public virtual int addSostZakaz(Nullable<int> id_zak, ObjectParameter id_blud)
        {
            var id_zakParameter = id_zak.HasValue ?
                new ObjectParameter("id_zak", id_zak) :
                new ObjectParameter("id_zak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSostZakaz", id_zakParameter, id_blud);
        }
    
        public virtual int addZakaz(ObjectParameter id_user)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addZakaz", id_user);
        }
    
        public virtual ObjectResult<BlockAndUnblock2_Result> BlockAndUnblock2(Nullable<int> id_blud)
        {
            var id_bludParameter = id_blud.HasValue ?
                new ObjectParameter("id_blud", id_blud) :
                new ObjectParameter("id_blud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlockAndUnblock2_Result>("BlockAndUnblock2", id_bludParameter);
        }
    
        public virtual int blocke(ObjectParameter id_rez)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("blocke", id_rez);
        }
    
        public virtual ObjectResult<BludKolKom_Result> BludKolKom(ObjectParameter id_user)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BludKolKom_Result>("BludKolKom", id_user);
        }
    
        public virtual ObjectResult<bludoAndNap_Result> bludoAndNap(ObjectParameter chislo)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bludoAndNap_Result>("bludoAndNap", chislo);
        }
    
        public virtual int DelIdRez(Nullable<int> id_rez, ObjectParameter name)
        {
            var id_rezParameter = id_rez.HasValue ?
                new ObjectParameter("id_rez", id_rez) :
                new ObjectParameter("id_rez", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelIdRez", id_rezParameter, name);
        }
    
        public virtual int delSostZak(Nullable<int> id_zak)
        {
            var id_zakParameter = id_zak.HasValue ?
                new ObjectParameter("id_zak", id_zak) :
                new ObjectParameter("id_zak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delSostZak", id_zakParameter);
        }
    
        public virtual ObjectResult<ID_IngKol_Result> ID_IngKol(ObjectParameter id_zak)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ID_IngKol_Result>("ID_IngKol", id_zak);
        }
    
        public virtual ObjectResult<ID_RezTop1_Result> ID_RezTop1(ObjectParameter id_rez)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ID_RezTop1_Result>("ID_RezTop1", id_rez);
        }
    
        public virtual ObjectResult<IngRez_Result> IngRez(ObjectParameter id_rez)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IngRez_Result>("IngRez", id_rez);
        }
    
        public virtual ObjectResult<kolCateg_Result> kolCateg(ObjectParameter chislo)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kolCateg_Result>("kolCateg", chislo);
        }
    
        public virtual ObjectResult<kolCateg2_Result> kolCateg2(ObjectParameter cat)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kolCateg2_Result>("kolCateg2", cat);
        }
    
        public virtual int pol(Nullable<int> role, string login, string password)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pol", roleParameter, loginParameter, passwordParameter);
        }
    
        public virtual int pol2(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pol2", loginParameter);
        }
    
        public virtual ObjectResult<RezIng_Result> RezIng(ObjectParameter id_blud)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RezIng_Result>("RezIng", id_blud);
        }
    
        public virtual ObjectResult<RezOcn_Result> RezOcn(ObjectParameter id_blud)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RezOcn_Result>("RezOcn", id_blud);
        }
    
        public virtual ObjectResult<sn_Result> sn(Nullable<int> chislo, ObjectParameter chto)
        {
            var chisloParameter = chislo.HasValue ?
                new ObjectParameter("chislo", chislo) :
                new ObjectParameter("chislo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sn_Result>("sn", chisloParameter, chto);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spisanie(Nullable<int> pred, Nullable<int> nom, ObjectParameter date)
        {
            var predParameter = pred.HasValue ?
                new ObjectParameter("pred", pred) :
                new ObjectParameter("pred", typeof(int));
    
            var nomParameter = nom.HasValue ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spisanie", predParameter, nomParameter, date);
        }
    
        public virtual ObjectResult<ss_Result> ss()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ss_Result>("ss");
        }
    
        public virtual int unblocke(ObjectParameter id_rez)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("unblocke", id_rez);
        }
    
        public virtual int UpIngJurn(Nullable<int> id_ing, ObjectParameter summaVesaJurn)
        {
            var id_ingParameter = id_ing.HasValue ?
                new ObjectParameter("id_ing", id_ing) :
                new ObjectParameter("id_ing", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpIngJurn", id_ingParameter, summaVesaJurn);
        }
    
        public virtual int UpIngZak(Nullable<int> id_ing, ObjectParameter summaVesaZak)
        {
            var id_ingParameter = id_ing.HasValue ?
                new ObjectParameter("id_ing", id_ing) :
                new ObjectParameter("id_ing", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpIngZak", id_ingParameter, summaVesaZak);
        }
    
        public virtual int UpKomSostZak(Nullable<int> kol, string komment, Nullable<int> id_user, Nullable<int> id_zak, ObjectParameter id_blud)
        {
            var kolParameter = kol.HasValue ?
                new ObjectParameter("kol", kol) :
                new ObjectParameter("kol", typeof(int));
    
            var kommentParameter = komment != null ?
                new ObjectParameter("komment", komment) :
                new ObjectParameter("komment", typeof(string));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var id_zakParameter = id_zak.HasValue ?
                new ObjectParameter("id_zak", id_zak) :
                new ObjectParameter("id_zak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpKomSostZak", kolParameter, kommentParameter, id_userParameter, id_zakParameter, id_blud);
        }
    
        public virtual int UpZakData(Nullable<int> id_user, ObjectParameter id_zak)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpZakData", id_userParameter, id_zak);
        }
    
        public virtual int UpZakOplata(ObjectParameter id_user)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpZakOplata", id_user);
        }
    
        public virtual int ZakObStoim(string name, ObjectParameter id_zak)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZakObStoim", nameParameter, id_zak);
        }
    }
}
